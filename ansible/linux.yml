---
- name: Install Linux packages
  hosts: local
  vars_files:
    - vars/packages.yml
  tasks:
    # --- Linux Tasks --- #
    - name: Install Linux packages with apt
      become: yes
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: "{{ linux_apt_packages }}"
      when: 
        - ansible_facts['os_family'] == "Debian"
        - linux_apt_packages is defined
        - linux_apt_packages | length > 0

    - name: Install Linux packages with dnf
      become: yes
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop: "{{ linux_dnf_packages }}"
      when: 
        - ansible_facts['os_family'] == "RedHat" # Covers Fedora, RHEL, CentOS etc.
        - linux_dnf_packages is defined
        - linux_dnf_packages | length > 0

    - name: Install Linux packages with Flatpak
      become: false # Flatpak usually runs as user
      community.general.flatpak:
        name: "{{ item }}"
        state: present
      loop: "{{ linux_flatpak_packages }}"
      when: 
        - linux_flatpak_packages is defined
        - linux_flatpak_packages | length > 0
      # Note: Needs Flatpak installed and configured (e.g., flathub remote)

    # --- Specific Linux AppImage: Espanso --- #
    - name: Install Espanso via AppImage on Linux
      become: yes # Need sudo for alias and potentially systemd
      block:
        - name: Create opt directory for Espanso
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/opt"
            state: directory
            mode: '0755'

        - name: Download Espanso AppImage
          ansible.builtin.get_url:
            url: "https://github.com/espanso/espanso/releases/download/v2.2.1/Espanso-X11.AppImage"
            dest: "{{ ansible_env.HOME }}/opt/Espanso.AppImage"
            mode: '0755' # Make executable directly

        - name: Create espanso command alias
          ansible.builtin.command:
            cmd: "{{ ansible_env.HOME }}/opt/Espanso.AppImage env-path register"
            creates: /usr/local/bin/espanso # Check if alias likely exists

        - name: Register Espanso service (systemd)
          ansible.builtin.command:
            cmd: espanso service register
          when: ansible_facts['service_mgr'] == 'systemd'

        - name: Start Espanso service (systemd)
          ansible.builtin.systemd:
            name: espanso
            state: started
            enabled: yes
            scope: user # Run as user service if possible
          when: ansible_facts['service_mgr'] == 'systemd' 